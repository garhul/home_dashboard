{"version":3,"sources":["data/index.js","components/widgets/admin/index.js","components/widgets/device/controls.js","components/widgets/device/index.js","components/widgets/index.js","components/navigation.js","components/mainView.js","serviceWorker.js","components/wsOverlay.js","index.js"],"names":["socket","WebSocket","window","location","host","split","bus","this","listeners","of","addEventListener","event","console","info","handleEvent","JSON","parse","data","ev","err","error","log","msg","readyState","send","stringify","hndlrs","forEach","val","fn","call","warn","dir","push","on","emit","AdminControls","DataBus","className","Button","block","variant","size","onClick","scan","React","Component","CMDButton","props","style","update","payload","label","CMDSlider","state","value","preventDefault","currentTarget","offsetLeft","clientX","offsetWidth","percentil","setState","Math","floor","clickHandler","ProgressBar","striped","now","CMDRange","useState","setValue","onChange","changeEvent","target","onAfterChange","CMDLabel","Row","Col","BatteryAlert","ArrowDownward","ArrowUpward","Plot","showScale","setShowScale","subset","setSubset","options","maintainAspectRatio","scales","yAxes","plots","map","plot","ticks","callback","index","values","unit","maxTicksLimit","fontColor","color","suggestedMin","min","suggestedMax","max","type","display","id","key","xAxes","distribution","time","drawTicks","datasets","borderColor","fill","p","t","y","v","yAxisID","Line","Sensor","showPlot","setShowPlot","buttons","ButtonGroup","aria-label","channels","chan","xs","icon","WbSunnyOutlined","WavesOutlined","Speed","Adjust","getIcon","parseFloat","keys","last","toFixed","ResponsiveContainer","height","LineChart","width","dot","dataKey","stroke","strokeWidth","margin","top","right","bottom","left","CartesianGrid","strokeDasharray","horizontal","YAxis","Tooltip","separator","labelFormatter","l","d","Date","toLocaleDateString","toLocaleTimeString","formatter","n","contentStyle","XAxis","hide","tick","tinyPlot","lastSeen","length","status","Badge","DeviceControl","Controls","controls","row","i","ctrl","toUpperCase","Alert","Container","Widget","name","human_name","getTitle","Widgets","widgets","item","NavBar","hash","setLocation","changeLocation","useCallback","loc","slice","useEffect","Navbar","fixed","bg","expand","collapseOnSelect","Brand","Toggle","aria-controls","Collapse","Nav","Link","href","MainView","updateWidgets","updateLocation","View","filter","w","getWidgets","Boolean","hostname","match","WsOverlay","visible","setVisibility","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.33f1eeca.chunk.js","sourcesContent":["const socket = new WebSocket(`ws://${window.location.host.split(':')[0]}:3030`);\n\nclass Bus {\n  constructor(socket) {\n    this.socket = socket;\n    this.listeners = [];\n    this.of = [];\n    \n    this.socket.addEventListener('open', (event) => {\n      console.info('Socket connected')\n      this.handleEvent('open');\n    });\n    \n    this.socket.addEventListener('message', (event) => {      \n      const {ev, data} = JSON.parse(event.data);\n      this.handleEvent(ev, data);\n    });\n\n    this.socket.addEventListener('error', (err) => {\n      console.error(err);\n      this.handleEvent('error');\n    });\n\n    this.socket.addEventListener('close', () => {\n      console.log('socket closed');\n      this.handleEvent('close');\n    })\n  }\n\n  emit(ev, msg) {    \n    if (this.socket.readyState === 1) {      \n      this.socket.send(JSON.stringify({ev, msg}));    \n    } else {\n      console.log('not ready yet', ev, msg);\n    }\n  }\n\n  handleEvent(ev, data) {\n    let hndlrs = 0;\n    this.listeners.forEach(val => {      \n      if (val.ev === ev) {\n        hndlrs++;\n        val.fn.call(this, data);\n      }\n    });\n\n    if (hndlrs === 0) {\n      console.warn(`No handler registered for ev ${ev}`);\n      console.dir(data);\n    }\n  }\n\n  on(ev, fn) {\n    this.listeners.push({ev, fn});\n  }\n}\n\nconst bus = new Bus(socket);\n\nbus.on('open', () => {\n  bus.emit('WIDGETS_LIST', {});  \n})\n\nexport default bus;","import React from 'react';\nimport DataBus from '../../../data';\nimport { Button } from 'react-bootstrap';\n\nexport default class AdminControls extends React.Component {\n  scan() {    \n    DataBus.emit('DEVICES_SCAN', {});\n  }\n  \n  render() {\n    return <div className=\"widget\">\n      <h2>Administration</h2>      \n        <Button\n          block=\"true\" \n          variant=\"outline-light\"size=\"lg\" onClick={() => this.scan()}>\n            Scan for devices\n        </Button>      \n      <div>\n        <h3>Cron tasks:</h3>\n      </div>      \n    </div >\n  }\n}\n","import React, { useState } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport ButtonGroup from 'react-bootstrap/ButtonGroup';\nimport ProgressBar from 'react-bootstrap/ProgressBar';\nimport Badge from 'react-bootstrap/Badge';\n// import { Line } from 'react-chartjs-2';\nimport { Row, Col } from 'react-bootstrap';\nimport { Adjust, Speed, WbSunnyOutlined, WavesOutlined, BatteryAlert, ArrowDownward, ArrowUpward } from '@material-ui/icons';\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport RangeSlider from 'react-bootstrap-range-slider';\nimport 'react-bootstrap-range-slider/dist/react-bootstrap-range-slider.css';\n\n\nexport function CMDButton(props) {\n  function clickHandler() {\n    props.update({ data: null, payload: props.payload });\n  }\n  return (\n    <Button block=\"true\" variant={(!props.style) ? \"outline-info\" : props.style} size=\"lg\" onClick={() => clickHandler()}>\n      {props.label}\n    </Button>)\n}\n\nexport class CMDSlider extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: 0 };\n  }\n\n  clickHandler(ev) {\n    ev.preventDefault();\n\n    console.log(ev.currentTarget.offsetLeft);\n    console.log(ev.clientX);\n    console.log(ev.currentTarget.offsetWidth);\n\n    const percentil = (ev.clientX - ev.currentTarget.offsetLeft) / ev.currentTarget.offsetWidth;\n    // console.log(`${percentil * 100} %`);\n    this.setState({ value: Math.floor(percentil * 100) });\n\n    console.log(this.state);\n    this.props.update({ data: this.state.value, payload: this.props.payload });\n  }\n\n  render() {\n    return <div className=\"sliderContainer\" onClick={(ev) => this.clickHandler(ev)}>\n      <span>{this.props.label}</span>\n\n      <ProgressBar striped variant=\"dark\" now={this.state.value} />\n    </div>\n  }\n}\n\n\nexport function CMDRange(props) {\n  const [value, setValue] = useState(props.val || 0);\n\n  return (\n    <div>\n      <div>\n        {props.label}\n      </div>\n      <RangeSlider\n        value={value}\n        size='lg'\n        variant='dark'\n        onChange={changeEvent => setValue(changeEvent.target.value)}\n        onAfterChange={ev => props.update({ data: ev.target.value, payload: props.payload })}\n      />\n    </div >)\n}\n\nexport function CMDSensorCard(props) {\n  return <div className=\"sensorBox\">\n    <div class=\"row\">\n      <div class=\"col\"></div>\n    </div>\n  </div>\n}\n\nexport function CMDLabel(props) {\n  return (\n    <Row className=\"\">\n      <Col><BatteryAlert style={{ \"font-size\": \"4em\" }} /> </Col>\n      <Col>\n        <Row>23 c</Row>\n        <Row>\n          <Col> <ArrowDownward /> 10 </Col>\n          <Col> <ArrowUpward /> 33 </Col>\n        </Row>\n      </Col>\n    </Row>\n  )\n  // return <Badge variant=\"warning\" style={{color:props.color}}>{props.label}</Badge>  \n}\n\nexport function Plot(props) {\n  const [showScale, setShowScale] = useState(false);\n  const [subset, setSubset] = useState('D');\n\n  const options = {\n    maintainAspectRatio: true,\n    scales: {\n      yAxes: props.plots.map(plot => ({\n        ticks: {\n          callback: (value, index, values) => `${value} ${plot.unit}`,\n          maxTicksLimit: 5,\n          fontColor: plot.color,\n          suggestedMin: plot.min ?? 0,\n          suggestedMax: plot.max ?? 100,\n        },\n        type: 'linear',\n        display: showScale,\n        id: `axis-${plot.key}`,\n\n\n      })),\n      xAxes: [{\n        type: 'time',\n        distribution: 'linear',\n        time: {\n          unit: 'minute'\n        },\n        drawTicks: false\n      }],\n    }\n  };\n  const data = {\n    datasets: props.plots.map(plot => ({\n      label: plot.label,\n      borderColor: plot.color,\n      fill: false,\n      data: props.data[subset].data.map(p => ({ t: p.t, y: p.v[plot.key] })),\n      yAxisID: `axis-${plot.key}`,\n    }))\n  };\n\n  return (\n    <div>\n      <Line data={data} options={options} />\n      <Row>\n        <Col>\n          <Button variant={(showScale) ? 'outline-success' : 'outline-secondary'} onClick={() => { setShowScale(!showScale) }} size=\"sm\">scale</Button>\n        </Col>\n        <Col>\n          <Button variant={(subset === 'Y') ? 'outline-success' : 'outline-secondary'} onClick={() => { setSubset('Y') }} size=\"sm\">Year</Button>\n        </Col>\n        <Col>\n          <Button variant={(subset === 'M') ? 'outline-success' : 'outline-secondary'} onClick={() => { setSubset('M') }} size=\"sm\">Month</Button>\n        </Col>\n        <Col>\n          <Button variant={(subset === 'W') ? 'outline-success' : 'outline-secondary'} onClick={() => { setSubset('W') }} size=\"sm\">Week</Button>\n        </Col>\n        <Col>\n          <Button variant={(subset === 'D') ? 'outline-success' : 'outline-secondary'} onClick={() => { setSubset('D') }} size=\"sm\">Day</Button>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\nfunction getIcon(icon) {\n  switch (icon) {\n    case 'TEMP':\n      return <WbSunnyOutlined style={{ \"fontSize\": \"5vh\" }} />\n\n    case 'HUMID':\n      return <WavesOutlined style={{ \"fontSize\": \"5vh\" }} />\n\n    case 'PRES':\n      return <Speed style={{ \"fontSize\": \"5vh\" }} />\n\n    case 'BAT':\n      return <BatteryAlert style={{ \"fontSize\": \"5vh\" }} />\n\n    default:\n      return <Adjust style={{ \"fontSize\": \"5vh\" }} />\n  }\n}\n\nfunction timeSince(t) {\n  const min = 60;\n  const hour = 3600;\n  const day = 86400;\n  const week = 604800;\n\n\n  if (t < min) {\n    return `${t}s`;\n  }\n\n  if (t < hour) {\n    return `${Math.floor(t / 60)}m`;\n  }\n\n  if (t < day) {\n    return `${Math.floor(t / hour)}h`;\n  }\n\n  if (t < week) {\n    return `${Math.floor(t / day)}d`;\n  }\n\n  return `${Math.floor(t / week)}w`;\n}\n\nfunction tinyPlot(props) {\n  const labelFn = (l) => {\n    const d = new Date(l);\n    return `${d.toLocaleDateString('en-GB')}:${d.toLocaleTimeString('en-GB')}`;\n  }\n\n  return (\n    <ResponsiveContainer height={100} >\n      <LineChart width={600} height={100} data={props.data}>\n        <Line dot={false} type=\"monotone\" dataKey=\"v\" stroke={props.color} strokeWidth={2} margin={{ top: 0, right: 0, bottom: 0, left: 0 }} />\n        <CartesianGrid stroke=\"#888\" strokeDasharray=\"4\" horizontal={false} />\n        <YAxis width={45} />\n        <Tooltip separator=\"\" labelFormatter={labelFn} formatter={(v, n, p) => [`${parseFloat(v).toFixed(2)}${props.unit}`, '']} contentStyle={{ \"backgroundColor\": \"#222\", \"border\": \"0\" }} />\n        <XAxis hide={true} dataKey=\"t\" tick={false} />\n      </LineChart>\n    </ResponsiveContainer>\n  );\n}\n\nexport function Sensor(props) {\n  const [showPlot, setShowPlot] = useState(false);\n  const [subset, setSubset] = useState('D');\n\n  function togglePlot() {\n    setShowPlot(!showPlot);\n  }\n  const buttons = (\n    <Col>\n      <ButtonGroup aria-label=\"timescales\">\n        <Button variant={(showPlot) ? 'outline-warning' : 'outline-secondary'} onClick={() => { togglePlot() }}>Plot</Button>\n        <Button variant={(subset === 'Y') ? 'outline-success' : 'outline-secondary'} onClick={() => { setSubset('Y') }} >last Year</Button>\n        <Button variant={(subset === 'M') ? 'outline-success' : 'outline-secondary'} onClick={() => { setSubset('M') }} >last 30d</Button>\n        <Button variant={(subset === 'W') ? 'outline-success' : 'outline-secondary'} onClick={() => { setSubset('W') }} >last 7d</Button>\n        <Button variant={(subset === 'D') ? 'outline-success' : 'outline-secondary'} onClick={() => { setSubset('D') }} >last 24h</Button>\n      </ButtonGroup>\n    </Col>\n  )\n\n  const channels = props.channels.map(chan => {\n    return (\n      <Row className=\"sensor_row\" key={`chann_${chan.key}`}>\n        <Col>\n          <Row>\n            <Col xs=\"auto\" style={{ \"alignSelf\": \"center\" }}>{getIcon(chan.icon)}</Col>\n            <Col xs=\"6\" style={{ \"alignSelf\": \"center\", \"fontSize\": \"4vh\" }}>\n              {parseFloat(props.data[subset].keys[chan.key].last).toFixed(2)}\n              <small>{chan.unit}</small>\n            </Col>\n            <Col xs=\"2\" style={{ \"fontSize\": \"2.6vh\" }}>\n              <Row>\n                <Col><ArrowUpward /></Col>\n                <Col>{parseFloat(props.data[subset].keys[chan.key].max).toFixed(2)}</Col>\n              </Row>\n              <Row>\n                <Col><ArrowDownward /></Col>\n                <Col>{parseFloat(props.data[subset].keys[chan.key].min).toFixed(2)}</Col>\n              </Row>\n            </Col>\n          </Row>\n\n          {showPlot ?\n            (<Row>\n              <Col style={{ \"color\": chan.color }}>{tinyPlot({\n                ...chan,\n                min: props.data[subset].keys[chan.key].min,\n                max: props.data[subset].keys[chan.key].max,\n                data: props.data[subset].data.map(d => ({ t: d.t, v: d.v[chan.key] }))\n              })}\n              </Col>\n            </Row>) : ''}\n\n        </Col>\n      </Row>)\n  });\n\n  const lastSeen = Math.floor((Date.now() - props.data[\"I\"].data[props.data[\"I\"].data.length - 1].t) / 1000);\n\n  return (\n    <div>\n      <Row><Col>\n        {channels}\n      </Col>\n      </Row>\n      <Row style={{ \"marginTop\": \".4em\" }}>{buttons}</Row>\n      <Row style={{ \"marginTop\": \".4em\", \"paddingRight\": \".4em\" }}>\n        <Col>\n          {\n            (props.state.status !== 'OPERATIVE')\n              ? (<Badge variant=\"danger\"><BatteryAlert /> Battery critical</Badge>) : ''\n          }\n        </Col>\n        <Col style={{ \"textAlign\": \"right\" }}>\n          <Badge variant={(lastSeen < 3600) ? 'dark' : 'danger'}>{timeSince(lastSeen)} ago</Badge>\n        </Col>\n      </Row>\n    </div>\n  )\n}\n\n\n","import React from 'react';\nimport DataBus from '../../../data';\nimport { CMDButton, Sensor, CMDSlider, CMDLabel, Plot, CMDRange } from './controls';\nimport { Container, Row, Col, Alert } from 'react-bootstrap';\n\nexport default class DeviceControl extends React.Component {\n  update({ data, payload }) {\n    DataBus.emit('WIDGETS_CMD', {\n      id: this.props.id,\n      data,\n      payload\n    });\n  }\n\n  render() {\n    const Controls = this.props.controls.map((row, i) => {\n      return (\n        <Row key={`row_${i}`}>\n          {row.map((ctrl, index) => {\n            if (!ctrl.type) return null;\n\n            switch (ctrl.type.toUpperCase()) {\n              case 'BUTTON':\n                return (<Col key={`btn_${index}`}>\n                  <CMDButton update={(data) => this.update(data)} key={`btn_${index}`} {...ctrl}></CMDButton>\n                </Col>);\n\n              case 'SLIDER':\n                return (\n                  <Col key={`slider_${index}`}>\n                    <CMDSlider update={(data) => this.update(data)} key={`slider_${index}`} {...ctrl}></CMDSlider >\n                  </Col>);\n\n              case 'LABEL':\n                return (\n                  <Col key={`label_${index}`}>\n                    <CMDLabel {...ctrl}></CMDLabel>\n                  </Col>\n                )\n\n              case 'RANGE':\n                return (\n                  <Col key={`range_${index}`}>\n                    <CMDRange update={(data) => this.update(data)} key={`rng_${index}`} {...ctrl}></CMDRange>\n                  </Col>\n                )\n\n              case 'PLOT':\n                return (\n                  <Col key={`plot_${index}`}>\n                    <Plot {...ctrl}></Plot>\n                  </Col>\n                )\n\n              case 'SENSOR':\n                return (\n                  <Col key={`sensor_${index}`}>\n                    <Sensor {...ctrl}></Sensor>\n                  </Col>\n                )\n\n              default:\n                return (<Alert key={`alert_${index}`} variant=\"warning\">Control for {ctrl.type} not found!</Alert>);\n            }\n          })}\n        </Row>\n      )\n    });\n\n    return <Container id=\"DeviceControl\">\n      {Controls}\n    </Container>\n  }\n}\n","import React from 'react';\nimport AdminControls from './admin';\nimport DeviceControls from './device';\n\nfunction getTitle(props) {\n  if (props.type === 'admin')\n    return (<div className=\"title\">Admin</div>);\n  \n  //TODO:: implement icon for battery alert\n  return (<div className=\"title\">\n      <span>{(props.name)? props.name : props.human_name }</span>\n  </div>)\n}\n\nexport function Widget(props) {  \n  function getControls() {    \n    if (props.type === 'admin') return <AdminControls {...props} />\n    return <DeviceControls {...props} />\n  }\n\n  return (\n    <div className=\"widget\">\n      {getTitle(props)}\n      {getControls()}\n    </div>\n    );  \n}\n\nexport default function Widgets(props) {  \n  return props.widgets.map((item, index) => <Widget type={props.location} key={index} {...item}></Widget>);\n}","import React, { useCallback, useEffect, useState } from 'react';\nimport { Nav, Navbar } from 'react-bootstrap'\nimport HomeIcon from '@material-ui/icons/Home';\n\nexport default function NavBar(props) {\n  const [location, setLocation] = useState(window.location.hash || '#home');\n\n  const changeLocation = useCallback((l) => {\n    const loc = l.slice(1);\n    props.onChange(loc)\n    setLocation(loc);\n  }, [props]);\n\n  useEffect(() => { changeLocation(window.location.hash || '#home') }, [changeLocation]);\n\n  return (\n    <Navbar fixed=\"top\" bg=\"dark\" expand=\"lg\" collapseOnSelect={true}>\n      <Navbar.Brand><HomeIcon style={{ \"fontSize\": \"3vh\" }}></HomeIcon></Navbar.Brand>\n      <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n      <Navbar.Collapse id=\"basic-navbar-nav\">\n        <Nav className=\"mr-auto\">\n          <Nav.Link onClick={() => { changeLocation('#home') }} href=\"#home\">home</Nav.Link>\n          <Nav.Link onClick={() => { changeLocation('#devices') }} href=\"#devices\">Devices</Nav.Link>\n          <Nav.Link onClick={() => { changeLocation('#sensors') }} href=\"#sensors\">Sensors</Nav.Link>\n          <Nav.Link onClick={() => { changeLocation('#admin') }} href=\"#admin\">Admin</Nav.Link>\n        </Nav>\n      </Navbar.Collapse>\n    </Navbar >\n  );\n\n}","import React, { useState, useEffect } from 'react';\nimport Widgets from './widgets';\nimport Admin from './widgets/admin';\nimport NavBar from './navigation';\nimport DataBus from '../data';\n\nexport default function MainView() {\n  const [widgets, updateWidgets] = useState([]);\n  const [location, updateLocation] = useState(\"\");\n\n  useEffect(() => {\n    DataBus.on('WIDGETS_UPDATE', (d) => {\n      // console.log('Received widgets.update', d);\n      updateWidgets(d);\n    });\n  }, []);\n\n  function getWidgets() {\n    switch (location) {\n      case 'devices':\n        return widgets.filter(w => w.type === 'aurora');\n\n      case 'sensors':\n        return widgets.filter(w => w.type === 'sensor');\n\n      case 'home':\n        return widgets.filter(w => w.type === 'group');\n\n      default:\n        return widgets;\n    }\n  }\n\n  const View = (location === 'admin') ? <Admin></Admin> : <Widgets location={location} widgets={getWidgets()}></Widgets>;\n  return (\n    <div>\n      <NavBar onChange={(w) => updateLocation(w)}></NavBar>\n      <div id=\"MainView\">\n        {View}\n      </div >\n    </div>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React, { useEffect, useState } from 'react';\nimport DataBus from '../data';\n\nexport default function WsOverlay() {\n  const [visible, setVisibility] = useState(true);\n\n  useEffect (() => {\n    DataBus.on('close', () => setVisibility(true));\n    DataBus.on('error', () => setVisibility(true));\n    DataBus.on('open', () => setVisibility(false));\n  \n  }, []);\n\n  return (<div id=\"ws-overlay\" className={visible? '' : 'hide'} >\n    <div>\n      <h2>WS not connected, please reload window</h2>\n    </div>\n  </div>)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport MainView from './components/mainView';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './app.css';\nimport WsOverlay from './components/wsOverlay';\nReactDOM.render(\n  <React.StrictMode>\n    <WsOverlay />\n    <MainView />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}